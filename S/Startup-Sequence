; Startup Sequence for Vampire Boot Installation
; ----------------------------------------------
;
; Date: 2017-06-16
; Author: Henrik Noerfjand Stengaard


; Load patched scsi.device v43.45
;LoadModule DEVS:scsi.device


; Clear screen
echo "*ec" 


; Welcome message
echo "Vampire Boot Installation"
echo "-------------------------"
echo ""
echo "Welcome to Vampire Boot, a boot setup to continue"
echo "startup from SD card mounted in Apollo Vampire"
echo "accelerator card."
echo ""
echo "This installation will copy Workbench system files"
echo "required for Vampire Boot mount SD card."
echo ""
ask "Press ENTER to continue"


; Clear screen
echo "*ec" 


; Workbench message
echo "Workbench 3.1 Disk"
echo "------------------"
echo ""
echo "System files are required from Workbench 3.1 disk to"
echo "complete Vampire boot installation."
echo ""
echo "Floppy device to use will now be autodetected by"
echo "checking if a disk is inserted in any floppy device."


; Print insert Workbench disk
LAB insertworkbenchdisk
echo ""
echo "Please insert Workbench 3.1 Workbench disk in any"
echo "floppy device."
echo ""
ask "Press ENTER to continue"
echo ""


; Using fail at 255 for DiskInDrive to fail properly
failat 255

; Check if disk is present in DF0:
DiskInDrive >NIL: DF0:
IF NOT WARN
  set floppydevice "DF0"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF1:
DiskInDrive >NIL: DF1:
IF NOT WARN
  set floppydevice "DF1"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF2:
DiskInDrive >NIL: DF2:
IF NOT WARN
  set floppydevice "DF2"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF3:, if not go back to insert workbench disk
DiskInDrive >NIL: DF3:
IF NOT WARN
  set floppydevice "DF3"
ELSE
  echo "No disk is inserted in any floppy device!"
  SKIP insertworkbenchdisk back
ENDIF


; Check Workbench 3.1 Workbench disk is present in DF0, if not go back to insert workbench disk
LAB checkworkbenchdisk
failat 21

IF NOT EXISTS $floppydevice:C/Which
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF
IF NOT EXISTS $floppydevice:C/Assign
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ELSE
  $floppydevice:C/Assign >NIL: T: RAM:
ENDIF
IF NOT "`$floppydevice:c/which $floppydevice:`" EQ "Workbench3.1:"
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF 


; Detected floppy device message
echo "Detected Workbench disk in floppy device $floppydevice:"
echo ""
ask "Press ENTER to continue"


; Set stack, failat and load basic commands resident 
stack 16384
failat 21
$floppydevice:C/AddBuffers >NIL: DF0: 200
resident $floppydevice:C/Assign PURE
resident $floppydevice:C/Copy PURE
resident $floppydevice:C/Delete PURE
resident $floppydevice:C/Execute PURE
resident $floppydevice:C/Rename PURE
resident $floppydevice:C/MakeDir PURE
resident $floppydevice:C/Protect PURE
resident $floppydevice:C/Search PURE 
resident $floppydevice:C/Wait PURE 
resident $floppydevice:C/Which PURE 
resident $floppydevice:C/Mount PURE
resident $floppydevice:C/Type PURE
resident $floppydevice:C/RequestChoice PURE
MakeDir RAM:Clipboards RAM:ENV RAM:ENV/Sys
Assign >NIL: ENV: RAM:Env
copy ENVARC:~(#?.info) ENV: ALL QUIET
Assign >NIL: T: RAM:
SetEnv TZ MST7


; Clear screen
echo "*ec" 


; Workbench message
echo "Workbench 3.1 Installation"
echo "--------------------------"
echo ""
echo "Copying Workbench 3.1 system files..."

; Copy Workbench files to system
copy >NIL: $floppydevice: SYS: ALL CLONE

echo "Done."
echo ""
echo "Workbench 3.1 installation is complete."
echo ""
ask "Press ENTER to continue"  


; Clear screen
echo "*ec" 


echo "Eject disk"
echo "----------"
echo ""
echo "A system reboot is required for installation process"
echo "to continue and floppy disk must be ejected."


; Check if disk is present in floppy device, if present go back to eject disk
LAB ejectdisk
DiskInDrive $floppydevice:
IF NOT WARN
  echo ""
  echo "Please eject disk from $floppydevice:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF


; Replace startup sequence with vampire boot startup sequence
Copy >NIL: S:Startup-Sequence.VampireBoot S:Startup-Sequence 
Delete >NIL: S:Startup-Sequence.VampireBoot 


; Clear screen
echo "*ec" 


; Vampire Boot complete
echo ""
echo "Vampire Boot Installation Complete"
echo "----------------------------------"
echo ""
echo "Vampire Boot has completed installation of"
echo "Workbench and will now reboot."
echo ""
echo "Please wait 10 seconds before restarting to allow file"
echo "system to write changes to disk. Continue will reboot"
echo "the system in 10 seconds."
echo ""
ask "Press ENTER to continue"
echo ""
echo "Rebooting in 10 seconds..."
wait 10
reboot


; Fail
LAB fail
echo ""
echo "Installation failed."


; End
LAB end